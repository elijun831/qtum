# Define the pod for creating a pod in kubernetes, as well as the volume mount and the persistent volume claim (PVC).
apiVersion: v1
kind: Pod
metadata:
  name: quantumpackage
spec:
  containers:
  - name: quantumpackage
    image: elijun831/quantumpackage:1.0.0
    command: ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]
    ports:
    - containerPort: 8888
    resources:
      requests:
        cpu: 100m # The minimum spec of CPU for an application to run; you can change this value.
        memory: 500Mi # The minimum spec of memory for an application to run; you can change this value.
      limits:
        cpu: 500m # The maxiumum spec of CPU for an application to run; you can change this value.
        memory: 2Gi # The maxiumum spec of memory for an application to run; you can change this value.
    volumeMounts:
    - name: storage
      mountPath: /path/to/directory # Path to the directory where the files will be mounted; please replace "/path/to/directory" with the actual path using "pwd" command in the terminal.
  volumes:
  - name: storage
    persistentVolumeClaim:
      claimName: persistent-volume-claim-app1 
---
# Define the PVC.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: persistent-volume-claim-app1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi # The amount of storage you want to allocate for the files; you can change this value.
  storageClassName: azurefilestorage
---
# Define the storage class.
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azurefilestorage
provisioner: kubernetes.io/azure-file
parameters:
  skuName: Read-access_GRS # The SKU name of the storage account; you can change this value (e.g., Standard_LRS, Standard_GRS, Standard_RAGRS, Premium_LRS, or Premium_ZRS).
  location: koreacentral # The location of the storage account; you can change this Azure region (e.g., eastus, westus, southcentralus, westeurope, eastasia).
  storageAccount: quantumkubernetes # The name of the storage account; make sure to set the storage in your Azure subscription.
  secretName: azure-secret
  secretNamespace: default
---
# Define the secret as well as your Azure credentials.
apiVersion: v1
kind: Secret
metadata:
  name: azure-secret
type: Opaque
data:
  azure_subscription_id: <Your Azure Subscription ID>
  azure_tenant_id: <Your Azure Tenant ID>
  azure_client_id: <Your Azure Client ID>
  azure_client_secret: <Your Azure Client Secret>

# Please note that the base64 encoded values for azure_subscription_id, azure_tenant_id, azure_client_id, and azure_client_secret. 
# should be replaced with your own Azure credentials, also base64 encoded.
# On Linux and MacOS, you can use the command "echo -n 'value' | base64" to encode. 
# On Windows, you can use the PowerShell command "[Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes("value"))" to encode.
